AC_PREREQ(2.53)
AC_INIT(cddb-slave2)


AS_VERSION(gnome-media, GNOME_MEDIA_VERSION, 2, 10, 0, 1,
  GM_RELEASE="yes", GM_RELEASE="no")

AM_MAINTAINER_MODE
AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AC_SUBST(ACLOCAL_AMFLAGS, "$ACLOCAL_FLAGS -I m4")

AM_CONFIG_HEADER(config.h)

AC_PROG_INTLTOOL([0.25])

AC_PROG_CC
AC_ISC_POSIX

# Checks for programs.
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h malloc.h strings.h sys/ioctl.h unistd.h)
AC_CHECK_HEADERS([sys/sockio.h sys/param.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_OFF_T
AC_TYPE_SIZE_T

# Checks for library functions.
#AC_FUNC_ALLOCA
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MMAP
#AC_CHECK_FUNCS(getcwd getwd putenv strdup strerror)

AC_DEFINE_UNQUOTED(DEFAULT_MIXER, gst-mixer, [default mixer to use])

dnl error flags
GM_ERROR_CFLAGS=""
dnl always use -Wall if it's supported
AS_COMPILER_FLAG(-Wall, GM_ERROR_CFLAGS="-Wall")
dnl if we're not in release mode, add -Werror if supported
if test "x$GM_RELEASE" = "xno"
then
  AS_COMPILER_FLAG(-Werror, GM_ERROR_CFLAGS="$GM_ERROR_CFLAGS -Werror")
fi
AC_MSG_NOTICE([Using $GM_ERROR_CFLAGS as error checking CFLAGS])

dnl Start of pkg-config checks
PKG_CHECK_MODULES(MEDIA, 				\
			glib-2.0 >= 1.3.7		\
			gmodule-2.0 >= 1.3.7		\
			libgnomeui-2.0 >= 1.102.0	\
			esound >= 0.2.23)
host=`uname -s`
case "$host" in
*SunOS*)
	MEDIA_LIBS="$MEDIA_LIBS -ldevinfo -lX11"
        ;;
esac

AC_SUBST(MEDIA_CFLAGS)
AC_SUBST(MEDIA_LIBS)

# Check for the CDDBSlave2 modules
PKG_CHECK_MODULES(CDDBSLAVE, 	glib-2.0 >= 1.3.7		\
				gmodule-2.0 >= 1.3.7 		\
				libgnomeui-2.0 >= 1.102.0)

# Check for network stuff
AC_CHECK_FUNCS(poll basename)
AC_CHECK_FUNC(inet_aton,,[AC_CHECK_LIB(resolv,inet_aton,CDDBSLAVE_LIBS="$CDDBSLAVE_LIBS -lresolv")])
AC_CHECK_FUNC(socket,,[AC_CHECK_LIB(socket,socket,CDDBSLAVE_LIBS="$CDDBSLAVE_LIBS -lsocket")])
AC_CHECK_FUNC(gethostbyname,,[AC_CHECK_LIB(nsl,gethostbyname,CDDBSLAVE_LIBS="$CDDBSLAVE_LIBS -lnsl")])

dnl=======================================================================
dnl                        IPv6 related checks
dnl=======================================================================
AC_MSG_CHECKING([whether to enable IPv6])
AC_ARG_ENABLE(ipv6, [  --enable-ipv6 to enable IPv6 extension], ,enable_ipv6=yes)
if test $enable_ipv6 = yes; then
  AC_TRY_COMPILE([
    #include <sys/types.h>
    #include <sys/socket.h>], [
    struct sockaddr_storage ss;
    socket(AF_INET6, SOCK_STREAM, 0)
    ],
    have_ipv6=yes,
    have_ipv6=no
    )
  AC_MSG_RESULT($have_ipv6)

  if test $have_ipv6 = yes; then
    have_getaddrinfo=no
    AC_CHECK_FUNC(getaddrinfo, have_getaddrinfo=yes)

    if test $have_getaddrinfo = no; then
      for lib in bsd socket inet; do
        AC_CHECK_LIB($lib,getaddrinfo,[LIBS="$LIBS -l$lib";have_getaddrinfo=yes;break])
      done
    fi

    if test $have_getaddrinfo = yes; then
      AC_DEFINE(ENABLE_IPV6, 1, [Define if we have IPv6 support])
    fi
  fi
fi

dnl=======================================================================
dnl                        IPv6 related checks ends..
dnl=======================================================================

AC_SUBST(CDDBSLAVE_LIBS)
AC_SUBST(CDDBSLAVE_CFLAGS, "$CDDBSLAVE_CFLAGS $GM_ERROR_CFLAGS")

PKG_CHECK_MODULES(VUMETER, glib-2.0 >= 1.3.7 gtk+-2.0 >= 2.3.1 \
		  esound >= 0.2.23 libgnomeui-2.0 > 1.102.0)
AC_SUBST(VUMETER_CFLAGS)
AC_SUBST(VUMETER_LIBS)

# Check for GStreamer stuff and GSR depds
HAVE_GST=no

GST_REQ=0.8.2
PROGRAMS_GSTRECORD=""

dnl start with 0.9
GST_MAJORMINOR=0.9
PKG_CHECK_MODULES(GSR, \
  gstreamer-$GST_MAJORMINOR >= $GST_REQ \
  gstreamer-libs-$GST_MAJORMINOR >= $GST_REQ \
  gstreamer-gconf-$GST_MAJORMINOR >= $GST_REQ \
  libgnomeui-2.0 >= 1.102.0 gnome-vfs-2.0,
  HAVE_GST=yes,HAVE_GST=no)

dnl fall back to 0.8
if test "x$HAVE_GST" = "xno"; then
  GST_MAJORMINOR=0.8
  PKG_CHECK_MODULES(GSR, \
    gstreamer-$GST_MAJORMINOR >= $GST_REQ \
    gstreamer-libs-$GST_MAJORMINOR >= $GST_REQ \
    gstreamer-gconf-$GST_MAJORMINOR >= $GST_REQ \
    libgnomeui-2.0 >= 1.102.0 gnome-vfs-2.0,
    HAVE_GST=yes,HAVE_GST=no)
fi

dnl fall back to 0.7
if test "x$HAVE_GST" = "xno"; then
  GST_MAJORMINOR=0.7
  PKG_CHECK_MODULES(GSR, \
    gstreamer-$GST_MAJORMINOR >= $GST_REQ \
    gstreamer-libs-$GST_MAJORMINOR >= $GST_REQ \
    gstreamer-gconf-$GST_MAJORMINOR >= $GST_REQ \
    libgnomeui-2.0 >= 1.102.0,
    HAVE_GST=yes,HAVE_GST=no)
fi

if test "x$HAVE_GST" = "xno"; then
  AC_MSG_WARN(you need GStreamer installed for the mixer and recorder to work)
else
  PROGRAMS_GRECORD="grecord"
fi
AC_SUBST(PROGRAMS_GRECORD)
AM_CONDITIONAL(HAVE_GSTREAMER, test "x$HAVE_GST" = "xyes")

AC_SUBST(GSR_CFLAGS)
AC_SUBST(GSR_LIBS)

AC_PATH_PROG(GCONFTOOL, gconftool-2)
AM_GCONF_SOURCE_2

AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)

BONOBO_IDLDIR="`$PKG_CONFIG --variable=idldir libbonobo-2.0`"
AC_SUBST(BONOBO_IDLDIR)
BONOBO_ACT_IDLDIR="`$PKG_CONFIG --variable=idldir bonobo-activation-2.0`"
AC_SUBST(BONOBO_ACT_IDLDIR)

ORBIT_IDL="`$PKG_CONFIG --variable=orbit_idl ORBit-2.0`"
AC_SUBST(ORBIT_IDL)

# Check for esound library
got_esd=no
AM_PATH_ESD(0.2.7, we_have_esd=true)
if test -n "$we_have_esd"; then
  got_esd=yes
  AC_DEFINE(HAVE_ESD, 1, [Defined if we have Esound])
fi

# Check for ScrollKeeper
AC_PATH_PROG(SCROLLKEEPER_CONFIG, scrollkeeper-config,no)
if test x$SCROLLKEEPER_CONFIG = xno; then
  AC_MSG_ERROR([Couldn't find scrollkeeper-config, please install the scrollkeeper package])
fi

# Test whether jw is installed
AC_PATH_PROG(JW,jw,no)
if test x$JW = xno; then
  HAVE_JW="no"
else
  HAVE_JW="yes"
fi
AM_CONDITIONAL(HAVE_JW, test "x$HAVE_JW" = "xyes")
AC_SUBST(HAVE_JW)

GETTEXT_PACKAGE=gnome-media-2.0
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [Define to the Gettext package name])

AM_PROG_LIBTOOL
ALL_LINGUAS="am ar az be bg bn bs ca cs cy da de el en_CA en_GB es et eu fa fi fr ga gl gu he hi hr hu id it ja ko lt lv mk ml mn ms nb ne nl nn no pa pl pt pt_BR ro ru sk sl sq sr sr@Latn sv ta th tk tr uk vi wa xh zh_CN zh_TW"

AM_GLIB_GNU_GETTEXT

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

# vu-meter
PROGRAMS_VUMETER=""
if test -n "$we_have_esd"; then
PROGRAMS_VUMETER="vu-meter"
fi
AC_SUBST(PROGRAMS_VUMETER)

# find the mailer for use with the submission helper
# This code is from the gnome-bug script.  It should work for most systems
AC_MSG_CHECKING(for the MTA)
if test -f /usr/sbin/sendmail; then
  MAIL_TRANSFER_AGENT="/usr/sbin/sendmail -t"
elif test -f /usr/lib/sendmail; then
  MAIL_TRANSFER_AGENT="/usr/lib/sendmail -t"
else
  MAIL_TRANSFER_AGENT="rmail "
fi
AC_DEFINE_UNQUOTED(MAIL_TRANSFER_AGENT, "$MAIL_TRANSFER_AGENT",
  [mail transfer agent command to use])
AC_MSG_RESULT($MAIL_TRANSFER_AGENT)

# Everything OK for gnome-cd?
# Check for the gnome-cd
PKG_CHECK_MODULES(GNOMECD, libnautilus-burn >= 2.9.0)
AC_SUBST(GNOMECD_CFLAGS)
AC_SUBST(GNOMECD_LIBS)

PROGRAMS_GNOME_CD=""
cdrom_header=""
AC_CHECK_HEADERS(linux/cdrom.h,[
  PROGRAMS_GNOME_CD=gnome-cd
  cdrom_header=linux/cdrom.h])
AC_CHECK_HEADERS(linux/ucdrom.h,[
  cdrom_header=linux/ucdrom.h])
AC_CHECK_HEADERS(sys/cdio.h,[
  PROGRAMS_GNOME_CD=gnome-cd
  cdrom_header=sys/cdio.h])
AC_CHECK_HEADERS(sun/dkio.h,[
  PROGRAMS_GNOME_CD=gnome-cd
  cdrom_header=sun/dkio.h])

AC_MSG_CHECKING([whether to use cd changer support])
AC_EGREP_CPP(answer_affirmatively,
[#include <linux/cdrom.h>
 #ifdef CDROM_CHANGER_NSLOTS
	answer_affirmatively
 #endif
], cd_changer=yes, cd_changer=no)
if test "$cd_changer" = "yes"; then
	USE_CD_CHANGER="-DTCD_CHANGER_ENABLED"
fi
AC_MSG_RESULT($cd_changer)

AC_SUBST(USE_CD_CHANGER)
AC_SUBST(PROGRAMS_GNOME_CD)

close_tray=no
AC_MSG_CHECKING([whether OS supports the CDROMCLOSETRAY ioctl])
AC_EGREP_CPP(answer_affirmatively,
[#include <$cdrom_header>
 #ifdef CDROMCLOSETRAY
 	answer_affirmatively
 #endif
], close_tray=yes)
if test "$close_tray" = "yes"; then
	AC_DEFINE(HAVE_CDROMCLOSETRAY_IOCTL, 1,
          [Defined if have an ioctl to close the CD-rom tray])
fi
AC_MSG_RESULT($close_tray)

host=`uname -s`

CDROM_HOST_BSD=false
CDROM_HOST_LINUX=false
CDROM_HOST_SOLARIS=false
case "$host" in
*FreeBSD*)
	CDROM_HOST=bsd
	CDROM_HOST_BSD=true
	default_cd_device="/dev/acd0c"
	;;
*NetBSD*)
	CDROM_HOST=bsd
	CDROM_HOST_BSD=true
	default_cd_device="/dev/rcd0d"
	;;
*Linux*) 
	CDROM_HOST=linux
	CDROM_HOST_LINUX=true
	default_cd_device="/dev/cdrom"
	;;
*SunOS*) 
	CDROM_HOST=solaris
	CDROM_HOST_SOLARIS=true
	default_cd_device="/vol/dev/aliases/cdrom0"
	;;
esac

AC_SUBST(CDROM_HOST)
AC_SUBST(CDROM_HOST_BSD)
AC_SUBST(CDROM_HOST_LINUX)
AC_SUBST(CDROM_HOST_SOLARIS)
AM_CONDITIONAL(CDROM_HOST_BSD, test "x$CDROM_HOST_BSD" = "xtrue")
AM_CONDITIONAL(CDROM_HOST_LINUX,   test "x$CDROM_HOST_LINUX"   = "xtrue")
AM_CONDITIONAL(CDROM_HOST_SOLARIS, test "x$CDROM_HOST_SOLARIS" = "xtrue")

AC_SUBST(default_cd_device)
AC_DEFINE_UNQUOTED(default_cd_device, "$default_cd_device",
  [Default CD device to use])

PKG_CHECK_MODULES(GAILUTIL, gail >= 0.0.3)

AC_SUBST(GAILUTIL_CFLAGS)
AC_SUBST(GAILUTIL_LIBS)

# gstreamer-properties
PROGRAMS_GSTPROPS=""
if test "x$HAVE_GST" = "xyes";
then
  COMMON_MODULES="gconf-2.0 libgnomeui-2.0 libglade-2.0 >= 1.99.12 libglade-2.0 gconf-2.0 gstreamer-$GST_MAJORMINOR gstreamer-libs-$GST_MAJORMINOR gstreamer-gconf-$GST_MAJORMINOR"
  PKG_CHECK_MODULES(GSTPROPS, $COMMON_MODULES libxml-2.0 gnome-vfs-2.0,
  		  PROGRAMS_GSTPROPS="gstreamer-properties")
  GSTPROPS_LIBS="$GSTPROPS_LIBS"
  AC_SUBST(GSTPROPS_LIBS)
  AC_SUBST(GSTPROPS_CFLAGS)

  GNOMECC_DESKTOP_DIR=${datadir}/control-center-2.0/capplets
  AS_AC_EXPAND(GNOMECC_DESKTOP_DIR, $GNOMECC_DESKTOP_DIR)
  AC_DEFINE_UNQUOTED(GNOMECC_DESKTOP_DIR, "$GNOMECC_DESKTOP_DIR", 
                     [Install path for Gnome control-center integration])
  AC_SUBST(GNOMECC_DESKTOP_DIR)
  AC_SUBST(PROGRAMS_GSTPROPS)
fi

# gst-mixer
if test "x$HAVE_GST" = "xyes";
then
  PROGRAMS_GSTMIX=""
  COMMON_MODULES="libgnomeui-2.0 gstreamer-$GST_MAJORMINOR gstreamer-interfaces-$GST_MAJORMINOR"
  PKG_CHECK_MODULES(GSTMIXER, $COMMON_MODULES, [
    OLD_CPPFLAGS=$CPPFLAGS
    CPPFLAGS="$CPPFLAGS $GSTMIXER_CFLAGS"
    PROGRAMS_GSTMIXER="gst-mixer"
    AC_CHECK_HEADER(gst/mixer/mixer.h, , PROGRAMS_GSTMIXER="")
    if test x$PROGRAMS_GSTMIXER != x; then
      AC_CHECK_HEADER(gst/propertyprobe/propertyprobe.h, , PROGRAMS_GSTMIXER="")
    fi
    CPPFLAGS=$OLD_CPPFLAGS
  ],
  [])

  AC_SUBST(GSTMIXER_LIBS)
  AC_SUBST(GSTMIXER_CFLAGS)
  AC_SUBST(PROGRAMS_GSTMIXER)
fi

# profiles
PKG_CHECK_MODULES(GMP, gconf-2.0 libglade-2.0 libgnomeui-2.0,
                  USE_GMP=yes, USE_GMP=no)
AC_SUBST(GMP_CFLAGS)
AC_SUBST(GMP_LIBS)


AC_OUTPUT([ 
gnome-media.spec
Makefile
po/Makefile.in
vu-meter/Makefile
cddb-slave2/Makefile
gnome-cd/Makefile
gnome-cd/gnome-cd.schemas.in
gnome-cd/images/Makefile
gnome-cd/images/None-theme/Makefile
gnome-cd/images/lcd-theme/Makefile
gnome-cd/images/red-lcd-theme/Makefile
gnome-cd/images/media-theme/Makefile
gnome-cd/access/Makefile
gnome-cd/doc/Makefile
gnome-cd/doc/C/Makefile
gnome-cd/doc/de/Makefile
gnome-cd/doc/es/Makefile
gnome-cd/doc/fr/Makefile
gnome-cd/doc/it/Makefile
gnome-cd/doc/sv/Makefile
gnome-cd/doc/ja/Makefile
gnome-cd/doc/ko/Makefile
gnome-cd/doc/zh_CN/Makefile
gnome-cd/doc/zh_TW/Makefile
grecord/Makefile
grecord/gnome-sound-recorder.schemas.in
grecord/src/Makefile
grecord/doc/Makefile
grecord/doc/C/Makefile
grecord/doc/de/Makefile
grecord/doc/es/Makefile
grecord/doc/fr/Makefile
grecord/doc/it/Makefile
grecord/doc/sv/Makefile
grecord/doc/ja/Makefile
grecord/doc/ko/Makefile
grecord/doc/zh_CN/Makefile
grecord/doc/zh_TW/Makefile
gstreamer-properties/Makefile
gstreamer-properties/help/Makefile
gstreamer-properties/help/C/Makefile
gst-mixer/Makefile
gst-mixer/src/Makefile
gst-mixer/pixmaps/Makefile
gst-mixer/doc/Makefile
gst-mixer/doc/C/Makefile
profiles/Makefile
profiles/gnome-audio-profiles.schemas.in
profiles/gnome-media-profiles.pc
profiles/glade/Makefile
version.h])

echo ""
echo "${PACKAGE} ${VERSION} has been configured as follows: "
echo
echo "Architecture:           ${CDROM_HOST}"
echo "Source code location:   ${srcdir}"
echo "Compiler:               ${CC}"
echo "System CDRom header:    ${cdrom_header}"
echo "Default CD device:      ${default_cd_device}"
if test x$PROGRAMS_GSTMIXER != x; then
  echo "GStreamer mixer:        yes"
else
  echo "GStreamer mixer:        no"
fi
echo "OS supports close tray: ${close_tray}"
if test x$PROGRAMS_GSTPROPS != x; then
  echo "GStreamer capplet:      yes"
else
  echo "GStreamer capplet:      no"
fi
if test x$PROGRAMS_GRECORD != x; then
  echo "Sound Recorder:         yes"
else
  echo "Sound Recorder:         no"
fi
echo

